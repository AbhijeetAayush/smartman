AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Collections Module for Smartman App

Parameters:
    TableName:
        Type: String
    SupabaseJwtSecret:
        Type: String
    AllowedOrigin:
        Type: String
    UpstashRedisRestUrl:
        Type: String
        Description: Upstash Redis REST API URL
        NoEcho: true
    UpstashRedisRestToken:
        Type: String
        Description: Upstash Redis REST API Token
        NoEcho: true

Globals:
    Function:
        Runtime: nodejs18.x
        Timeout: 30
        Environment:
            Variables:
                TABLE_NAME: !Ref TableName
                SUPABASE_JWT_SECRET: !Ref SupabaseJwtSecret
                ALLOWED_ORIGIN: !Ref AllowedOrigin
                UPSTASH_REDIS_REST_URL: !Ref UpstashRedisRestUrl
                UPSTASH_REDIS_REST_TOKEN: !Ref UpstashRedisRestToken

Resources:
    SaveCollectionFunction:
        Type: AWS::Serverless::Function
        Properties:
            Handler: src/save-collection/app.handler
            CodeUri: ./
            Policies:
                - DynamoDBCrudPolicy:
                      TableName: !Ref TableName
            Runtime: nodejs18.x
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: 'es2020'
                Sourcemap: false
                EntryPoints:
                    - src/save-collection/app.ts
                External:
                    - '@aws-sdk/client-dynamodb'
                    - '@aws-sdk/lib-dynamodb'

    ListCollectionsFunction:
        Type: AWS::Serverless::Function
        Properties:
            Handler: src/list-collections/app.handler
            CodeUri: ./
            Policies:
                - DynamoDBReadPolicy:
                      TableName: !Ref TableName
            Runtime: nodejs18.x
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: 'es2020'
                Sourcemap: false
                EntryPoints:
                    - src/list-collections/app.ts
                External:
                    - '@aws-sdk/client-dynamodb'
                    - '@aws-sdk/lib-dynamodb'

    DeleteCollectionFunction:
        Type: AWS::Serverless::Function
        Properties:
            Handler: src/delete-collection/app.handler
            CodeUri: ./
            Policies:
                - DynamoDBCrudPolicy:
                      TableName: !Ref TableName
            Runtime: nodejs18.x
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: 'es2020'
                Sourcemap: false
                EntryPoints:
                    - src/delete-collection/app.ts
                External:
                    - '@aws-sdk/client-dynamodb'
                    - '@aws-sdk/lib-dynamodb'

Outputs:
    SaveCollectionFunctionArn:
        Description: ARN of the SaveCollection Lambda Function
        Value: !GetAtt SaveCollectionFunction.Arn
        Export:
            Name: !Sub '${AWS::StackName}-SaveCollectionFunctionArn'
    ListCollectionsFunctionArn:
        Description: ARN of the ListCollections Lambda Function
        Value: !GetAtt ListCollectionsFunction.Arn
        Export:
            Name: !Sub '${AWS::StackName}-ListCollectionsFunctionArn'
    DeleteCollectionFunctionArn:
        Description: ARN of the DeleteCollection Lambda Function
        Value: !GetAtt DeleteCollectionFunction.Arn
        Export:
            Name: !Sub '${AWS::StackName}-DeleteCollectionFunctionArn'
